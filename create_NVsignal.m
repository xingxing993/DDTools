function create_NVsignal(varobject)% Create mpt.Signal% mpt.Signal (handle)%           RTWInfo: [1x1 mpt.CustomRTWInfoSignal]%       Description: ''%          DataType: 'auto'%               Min: -Inf%               Max: Inf%          DocUnits: ''%        Dimensions: -1%        Complexity: 'auto'%        SampleTime: -1%      SamplingMode: 'auto'%      InitialValue: ''%          EnumType: ''%     FunctionGroup: ''%            Format: ''try    sigobj = mpt.Signal;catch    error('Data object class ''mpt.Signal'' has not been defined.');    return;endif ~isempty(varobject.Min)sigobj.Min = varobject.Min;endif ~isempty(varobject.Max)sigobj.Max = varobject.Max;endif strncmp(varobject.DataType, 'Enum:', 5)    sigobj.InitialValue = varobject.DefaultValue;elsesigobj.InitialValue = num2str(varobject.DefaultValue);end% Parameter .InitialValue must be a string.% /* Change comment:DataType must be assign after the Value, Min and Max.*/ % /* For some Value, Min or Max have the type infomation!!! take 0,1 for */% /* example, matlab may thought it was logical                          */sigobj.DataType = varobject.DataType;sigobj.DocUnits = varobject.Unit;sigobj.Dimensions = 1;% sigobj.DimensionsMode = 'Fixed';sigobj.Description = varobject.Description;sigobj.RTWInfo.StorageClass = 'Custom';sigobj.RTWInfo.CustomStorageClass = 'ASAP2';sigobj.RTWInfo.CustomAttributes.MemorySection = 'MEM_NV';sigobj.RTWInfo.CustomAttributes.DataInit = 'Static';sigobj.EnumType = varobject.EnumType;sigobj.FunctionGroup = varobject.Group;sigobj.DaqSampleTime = num2str(varobject.(genvarname('DAQrate(s)'))); % Caution! Use <genvarname> to get the right field name (as the same way is used when extracting <varobject>) sigobj.Format = varobject.Format;sigobj.RTWInfo.CustomAttributes.HeaderFile = 'ASAP2NV';sigobj.RTWInfo.CustomAttributes.DefinitionFile = 'ASAP2NV';assignin('base', varobject.Name, sigobj);end